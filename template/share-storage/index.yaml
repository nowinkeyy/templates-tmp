apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: share-storage
spec:
  title: '共享存储'
  url: 'https://github.com/nowinkeyy/templates-tmp'
  gitRepo: 'https://github.com/nowinkeyy/templates-tmp'
  author: 'Sealos'
  description: 'Any share storage'
  readme: 'https://raw.githubusercontent.com/nowinkeyy/templates-tmp/main/template/share-storage/README.md'
  icon: 'https://objectstorageapi.cloud.xinyun.cn/admin-admin-icons/丝路新云~LOGO.svg'
  templateType: inline
  categories:
    - tool
  defaults:
    app_name:
      type: string
      value: share-storage-${{ random(8) }}
    app_host:
      type: string
      value: ${{ random(8) }}
  inputs:
    IMAGE:
      description: 'docker image'
      type: string
      default: 'nginx:latest'
      required: true
    PORT:
      description: 'opened port'
      type: number
      default: '80'
      required: true
    STORAGE_CLASS:
      description: 'storage class name'
      type: string
      default: 'resize-13000-share-nfs-sc'
      required: true
    SHARE_STORAGE_LOCATION:
      description: 'storage location'
      type: string
      default: '/data'
      required: true
    SHARE_STORAGE_SIZE:
      description: 'share storage size'
      type: number
      default: '1'
      required: true

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: ${{ inputs.IMAGE }}
    deploy.cloud.sealos.io/minReplicas: '3'
    deploy.cloud.sealos.io/maxReplicas: '3'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 0
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}
          image: ${{ inputs.IMAGE }}
          env: []
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          ports:
            - containerPort: ${{ inputs.PORT }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: share-storage
              mountPath: ${{ inputs.SHARE_STORAGE_LOCATION }}
      volumes:
        - name: share-storage
          persistentVolumeClaim:
            claimName: ${{ defaults.app_name }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${{ defaults.app_name }}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: ${{ inputs.SHARE_STORAGE_SIZE }}Gi
  storageClassName: ${{ inputs.STORAGE_CLASS }}

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: ${{ inputs.PORT }}
  selector:
    app: ${{ defaults.app_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: ${{ inputs.PORT }}
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}